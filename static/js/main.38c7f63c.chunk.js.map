{"version":3,"sources":["react_component/to_do-react/todo.js","App.js","index.js"],"names":["Todo","useState","inputData","setInputData","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","map","curElem","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","placeholder","value","onChange","e","target","onClick","index","item_edited","find","editItem","updatedItems","filter","deleteItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAsIeA,EAxHF,WACZ,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAZN,WACpB,IAAMG,EAAQC,aAAaC,QAAQ,cAEnC,OAAIF,EACIG,KAAKC,MAAMJ,GAEX,GAM2BK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAIMC,EAAU,WACf,GAAKd,EAEE,GAAIA,GAAaY,EACvBH,EACCD,EAAMO,KAAI,SAACC,GACV,OAAIA,EAAQC,KAAOP,EACX,2BAAKM,GAAZ,IAAqBE,KAAMlB,IAErBgB,MAGTf,EAAa,IACbU,EAAc,MACdE,GAAgB,OACV,CACN,IAAMM,EAAiB,CACtBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAEPS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SAnBbsB,MAAM,yBAmDR,OAHAC,qBAAU,WACTrB,aAAasB,QAAQ,aAAcpB,KAAKqB,UAAUlB,MAChD,CAACA,IAEH,mCACC,qBAAKmB,UAAU,WAAf,SACC,sBAAKA,UAAU,YAAf,UACC,mCACC,qBAAKC,IAAI,oBAAoBC,IAAI,aACjC,+DAED,sBAAKF,UAAU,WAAf,UACC,uBACCG,KAAK,OACLC,YAAY,WACZJ,UAAU,eACVK,MAAOhC,EACPiC,SAAU,SAACC,GAAD,OAAOjC,EAAaiC,EAAEC,OAAOH,UAEvCpB,EACA,mBAAGe,UAAU,qBAAqBS,QAAStB,IAE3C,mBAAGa,UAAU,qBAAqBS,QAAStB,OAK7C,qBAAKa,UAAU,YAAf,SACEnB,EAAMO,KAAI,SAACC,GACX,OACC,sBAAKW,UAAU,WAAf,UACC,6BAAKX,EAAQE,OACb,sBAAKS,UAAU,WAAf,UACC,mBACCA,UAAU,sBACVS,QAAS,kBA3DF,SAACC,GACjB,IAAMC,EAAc9B,EAAM+B,MAAK,SAACvB,GAC/B,OAAOA,EAAQC,KAAOoB,KAEvBpC,EAAaqC,EAAYpB,MACzBP,EAAc0B,GACdxB,GAAgB,GAqDQ2B,CAASxB,EAAQC,OAEjC,mBACCU,UAAU,2BACVS,QAAS,kBApDA,SAACC,GACnB,IAAMI,EAAejC,EAAMkC,QAAO,SAAC1B,GAClC,OAAOA,EAAQC,KAAOoB,KAEvB5B,EAASgC,GAgDeE,CAAW3B,EAAQC,YATND,EAAQC,SAiB1C,qBAAKU,UAAU,YAAf,SACC,wBACCA,UAAU,eACV,oBAAkB,aAClBS,QAxDY,WACjB3B,EAAS,KAoDL,SAKC,2DC3GQmC,EAVH,WAGX,OACC,mCACC,cAAC,EAAD,OCTHC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.38c7f63c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\n\r\n// Getting Local Storage\r\nconst getLocalData = () => {\r\n\tconst lists = localStorage.getItem(\"mytodolist\");\r\n\r\n\tif (lists) {\r\n\t\treturn JSON.parse(lists);\r\n\t} else {\r\n\t\treturn [];\r\n\t}\r\n};\r\n\r\nconst Todo = () => {\r\n\tconst [inputData, setInputData] = useState(\"\");\r\n\tconst [items, setItems] = useState(getLocalData());\r\n\tconst [isEditItem, setIsEditItem] = useState(\"\");\r\n\tconst [toggleButton, setToggleButton] = useState(false);\r\n\r\n\t//Function for adding Items\r\n\r\n\tconst addItem = () => {\r\n\t\tif (!inputData) {\r\n\t\t\talert(\"Please Fill the Data\");\r\n\t\t} else if (inputData && toggleButton) {\r\n\t\t\tsetItems(\r\n\t\t\t\titems.map((curElem) => {\r\n\t\t\t\t\tif (curElem.id === isEditItem) {\r\n\t\t\t\t\t\treturn { ...curElem, name: inputData };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn curElem;\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tsetInputData([]);\r\n\t\t\tsetIsEditItem(null);\r\n\t\t\tsetToggleButton(false);\r\n\t\t} else {\r\n\t\t\tconst myNewInputData = {\r\n\t\t\t\tid: new Date().getTime().toString(),\r\n\t\t\t\tname: inputData,\r\n\t\t\t};\r\n\t\t\tsetItems([...items, myNewInputData]);\r\n\t\t\tsetInputData(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\t//Editing Items\r\n\tconst editItem = (index) => {\r\n\t\tconst item_edited = items.find((curElem) => {\r\n\t\t\treturn curElem.id === index;\r\n\t\t});\r\n\t\tsetInputData(item_edited.name);\r\n\t\tsetIsEditItem(index);\r\n\t\tsetToggleButton(true);\r\n\t};\r\n\r\n\t// Deleting Section\r\n\r\n\tconst deleteItem = (index) => {\r\n\t\tconst updatedItems = items.filter((curElem) => {\r\n\t\t\treturn curElem.id !== index;\r\n\t\t});\r\n\t\tsetItems(updatedItems);\r\n\t};\r\n\r\n\t//Removing all elements\r\n\tconst removeAll = () => {\r\n\t\tsetItems([]);\r\n\t};\r\n\r\n\t//Adding Local Storage\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\"mytodolist\", JSON.stringify(items));\r\n\t}, [items]);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"main-div\">\r\n\t\t\t\t<div className=\"child-div\">\r\n\t\t\t\t\t<figure>\r\n\t\t\t\t\t\t<img src=\"./images/todo.svg\" alt=\"todologo\" />\r\n\t\t\t\t\t\t<figcaption>Add Your List Here</figcaption>\r\n\t\t\t\t\t</figure>\r\n\t\t\t\t\t<div className=\"addItems\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Add Item\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tvalue={inputData}\r\n\t\t\t\t\t\t\tonChange={(e) => setInputData(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{toggleButton ? (\r\n\t\t\t\t\t\t\t<i className=\"fa fa-edit add-btn\" onClick={addItem}></i>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<i className=\"fa fa-plus add-btn\" onClick={addItem}></i>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* To display/show items */}\r\n\t\t\t\t\t<div className=\"showItems\">\r\n\t\t\t\t\t\t{items.map((curElem) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className=\"eachItem\" key={curElem.id}>\r\n\t\t\t\t\t\t\t\t\t<h3>{curElem.name}</h3>\r\n\t\t\t\t\t\t\t\t\t<div className=\"todo-btn\">\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fas fa-edit add-btn\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => editItem(curElem.id)}\r\n\t\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fas fa-trash-alt add-btn\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => deleteItem(curElem.id)}\r\n\t\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"showItems\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"btn effect04\"\r\n\t\t\t\t\t\t\tdata-sm-link-text=\"Remove All\"\r\n\t\t\t\t\t\t\tonClick={removeAll}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span> CHECK LIST</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\n// import Hotel from \"./react_component/basic/hotel\";\r\n// import UseState from \"./react_component/hooks/useState\";\r\n// import UseEffect from \"./react_component/hooks/useEffect\";\r\n// import UseReducer from \"./react_component/hooks/useReducer\";\r\nimport Todo from \"./react_component/to_do-react/todo\";\r\n\r\n// Using const\r\nconst App = () => {\r\n\t// fat arrow function (=>)\r\n\t// New\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Todo />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}